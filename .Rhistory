library(tm)
dataset <- readLines("TMwithR.txt")
install.packages("tm")
install.packages("tm")
library(tm)
music <- read.csv("music.csv", header=T)
music_cleaned <- music[,c(1, 7, 9, 10, 11, 18, 24,26, 28, 29, 30, 32)]
dim(music_cleaned)
#removing the empty values
music_cleaned <- music_cleaned[complete.cases(music_cleaned),]
dim(music_cleaned)
setwd("~/Desktop/Semester 2/ASDM/Assessment ")
music <- read.csv("music.csv", header=T)
music_cleaned <- music[,c(1, 7, 9, 10, 11, 18, 24,26, 28, 29, 30, 32)]
dim(music_cleaned)
#removing the empty values
music_cleaned <- music_cleaned[complete.cases(music_cleaned),]
dim(music_cleaned)
library(cluster)
head(music_cleaned)
#getting the pair of clusters
pairs(music_cleaned)
View(music_cleaned)
View(music_cleaned)
View(music_cleaned)
View(music_cleaned)
#normalizing with range between -1 and 1
col <- ncol(music_cleaned)
newmin = -1
newmax= 1
str(nrml_music)
nrml_music <- 0
for(j in 1:col)
{
oldmin <- min(music_cleaned[j])
oldmax <- max(music_cleaned[j])
current <- music_cleaned[j]
temp <- ((current-oldmin)/(oldmax-oldmin))*(newmax-newmin) + newmin
temp <- as.data.frame(temp)
nrml_music <- cbind(nrml_music, data.frame(temp))
}
nrml_music <- nrml_music[,-c(1)]
View(nrml_music)
kc <- kmeans(nrml_music,5)
#center of each cluster
kc$centers
#distribution of terms(genre in clusters)
table(music_cleaned$tempo, kc$cluster)
plot(music_cleaned$song.hotttnesss ~ music_cleaned$artist.hotttnesss, data = music_cleaned,col=kc$cluster)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=music_cleaned$terms)
music_cleaned$terms
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=nrml_music$artist.hotttnesss)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=nrml_music$song.hotttnesss)
kc <- kmeans(nrml_music,3)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
kc <- kmeans(nrml_music,4)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("bars_start", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("artist.hotttnesss", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("loudness", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=nrml_music$song.hotttnesss)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("duration", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("end_of_fade_in", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("song.hotttnesss", "temp")], col=kc$cluster)
tempo
tempo
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
song.hotttnesss
plot(music_cleaned[c("song.hotttnesss", "temp")], col=kc$cluster)
plot(music_cleaned[c("song.hotttnesss", "temp")], col=kc$cluster)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("song.hotttnesss", "tempo")], col=kc$cluster)
plot(music_cleaned[c("loudness", "song.hotttnesss")], col=kc$cluster)
plot(music_cleaned[c("tempo", "song.hotttnesss")], col=kc$cluster)
